#include "implementation.oil"

CPU ATMEL_AT91SAM7S256
{
  OS LEJOS_OSEK
  {
    STATUS = EXTENDED;
    STARTUPHOOK = FALSE;
    ERRORHOOK = FALSE;
    SHUTDOWNHOOK = FALSE;
    PRETASKHOOK = FALSE;
    POSTTASKHOOK = FALSE;
    USEGETSERVICEID = FALSE;
    USEPARAMETERACCESS = FALSE;
    USERESSCHEDULER = FALSE;
  };

  /* Definition of application mode */
  APPMODE appmode1{};
   
  /* Definition of DisplayTask */
  TASK DisplayTask
  {
    AUTOSTART = FALSE;
    PRIORITY = 4;
    ACTIVATION = 1;
    SCHEDULE = FULL;
    STACKSIZE = 512; /* Stack size */ 
	RESOURCE = dc_manage;
  };
   
  /* Definition of MotorControlTask */ 
  TASK MotorControlTask
  {
    AUTOSTART = FALSE;    
    PRIORITY = 1; /* Smaller value means lower priority */
    ACTIVATION = 1;
    SCHEDULE = FULL;
    STACKSIZE = 512; /* Stack size */
	RESOURCE = dc_manage;
  };

  /* Definition of ButtonPressTask */ 
  TASK ButtonPressTask
  {
    AUTOSTART = FALSE;    
    PRIORITY = 3; /* Smaller value means lower priority */
    ACTIVATION = 1;
    SCHEDULE = FULL;
    STACKSIZE = 512; /* Stack size */
  };  
  
  
  /*Definition of Distance Task*/
  TASK DistanceTask
  {
    AUTOSTART = FALSE;
    PRIORITY = 2;
    ACTIVATION = 1;
    SCHEDULE = FULL;
    STACKSIZE = 512; /* Stack size */ 
	RESOURCE = dc_manage;
  };
  
  /* Definition of OSEK Alarm Counter */
  COUNTER SysTimerCnt
  {
    MINCYCLE = 1;
    MAXALLOWEDVALUE = 10000;
    TICKSPERBASE = 1; /* One tick is equal to 1msec */ 
  };

  /* Definition of MotorControlTask execution timing */
  ALARM cyclic_alarm1
  {
    COUNTER = SysTimerCnt;
    ACTION = ACTIVATETASK
    {
      TASK = MotorControlTask;
    };
    AUTOSTART = TRUE
    {
      ALARMTIME = 1;
      CYCLETIME = 50;  /* MotorControlTask is executed every 50msec */
      APPMODE = appmode1;
    };
  };
  
  /* Definition of ButtonPressTask execution timing */
  ALARM cyclic_alarm2
  {
    COUNTER = SysTimerCnt;
    ACTION = ACTIVATETASK
    {
      TASK = ButtonPressTask;
    };
    AUTOSTART = TRUE
    {
      ALARMTIME = 1;
      CYCLETIME = 10;  /* ButtonPressTask is executed every 10msec */
      APPMODE = appmode1;
    };
  };  
  
  /* Definition of DisplayTask execution timing */
  ALARM cyclic_alarm3
  {
    COUNTER = SysTimerCnt;
    ACTION = ACTIVATETASK
    {
      TASK = DisplayTask;
    };
    AUTOSTART = TRUE
    {
      ALARMTIME = 1;
      CYCLETIME = 100;  /* DisplayTask is executed every 100msec */
      APPMODE = appmode1;
    };
  };
  
  /* Definition of DistanceTask execution timing */
  ALARM cyclic_alarm4
  {
    COUNTER = SysTimerCnt;
    ACTION = ACTIVATETASK
    {
      TASK = DistanceTask;
    };
    AUTOSTART = TRUE
    {
      ALARMTIME = 1;
      CYCLETIME = 100;  /* DistanceTask is executed every 100msec */
      APPMODE = appmode1;
    };
  };
  
  RESOURCE dc_manage
  {
 	RESOURCEPROPERTY = STANDARD;
  };
};

