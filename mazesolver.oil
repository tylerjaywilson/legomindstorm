#include "implementation.oil"

CPU ATMEL_AT91SAM7S256
{
  OS LEJOS_OSEK
  {
    STATUS = EXTENDED;
    STARTUPHOOK = FALSE;
    ERRORHOOK = FALSE;
    SHUTDOWNHOOK = FALSE;
    PRETASKHOOK = FALSE;
    POSTTASKHOOK = FALSE;
    USEGETSERVICEID = FALSE;
    USEPARAMETERACCESS = FALSE;
    USERESSCHEDULER = FALSE;
  };

  /* Definition of application mode */
  APPMODE appmode1{};
  
  /* Definition of DisplayTask */
  TASK DisplayTask
  {
    AUTOSTART = FALSE;
    PRIORITY = 1;	//Smaller value means lower priority
    ACTIVATION = 1;
    SCHEDULE = FULL;
    STACKSIZE = 512; /* Stack size */ 
	RESOURCE = sensor_data_manage;
  };
   
  /* Definition of MotorControlTask */ 
  TASK MotorControlTask
  {
    AUTOSTART = FALSE;    
    PRIORITY = 3; /* Smaller value means lower priority */
    ACTIVATION = 1;
    SCHEDULE = FULL;
    STACKSIZE = 512; /* Stack size */
	RESOURCE = sensor_data_manage;
  };

    /* Definition of LeftSensorTask */ 
  TASK LeftSensorTask
  {
    AUTOSTART = FALSE;    
    PRIORITY = 2; /* Smaller value means lower priority */
    ACTIVATION = 2;
    SCHEDULE = FULL;
    STACKSIZE = 512; /* Stack size */
	RESOURCE = sensor_data_manage;
  };
  
    /* Definition of RightSensorTask */ 
  TASK RightSensorTask
  {
    AUTOSTART = FALSE;    
    PRIORITY = 2; /* Smaller value means lower priority */
    ACTIVATION = 1;
    SCHEDULE = FULL;
    STACKSIZE = 512; /* Stack size */
	RESOURCE = sensor_data_manage;
  };
  
    /* Definition of FrontSensorTask */ 
  TASK FrontSensorTask
  {
    AUTOSTART = FALSE;    
    PRIORITY = 2; /* Smaller value means lower priority */
    ACTIVATION = 1;
    SCHEDULE = FULL;
    STACKSIZE = 512; /* Stack size */
	RESOURCE = sensor_data_manage;
  };
  
  /* Definition of LightSensorTask */ 
  TASK LightSensorTask
  {
    AUTOSTART = FALSE;    
    PRIORITY = 4; /* Smaller value means lower priority */
    ACTIVATION = 1;
    SCHEDULE = FULL;
    STACKSIZE = 512; /* Stack size */
	RESOURCE = sensor_data_manage;
  };
  
  /* Definition of OSEK Alarm Counter */
  COUNTER SysTimerCnt
  {
    MINCYCLE = 1;
    MAXALLOWEDVALUE = 10000;
    TICKSPERBASE = 1; /* One tick is equal to 1msec */ 
  };

  /* Definition of MotorControlTask execution timing */
  ALARM cyclic_alarm1
  {
    COUNTER = SysTimerCnt;
    ACTION = ACTIVATETASK
    {
      TASK = MotorControlTask;
    };
    AUTOSTART = TRUE
    {
      ALARMTIME = 1;
      CYCLETIME = 50;  /* MotorControlTask is executed every 30msec */
      APPMODE = appmode1;
    };
  };
  
  /* Definition of DisplayTask execution timing */
  ALARM cyclic_alarm2
  {
    COUNTER = SysTimerCnt;
    ACTION = ACTIVATETASK
    {
      TASK = DisplayTask;
    };
    AUTOSTART = TRUE
    {
      ALARMTIME = 1;
      CYCLETIME = 100;  /* DisplayTask is executed every 100msec */
      APPMODE = appmode1;
    };
  };
  
  /* Definition of LightSensorTask execution timing */
  ALARM cyclic_alarm3
  {
    COUNTER = SysTimerCnt;
    ACTION = ACTIVATETASK
    {
      TASK = LightSensorTask;
    };
    AUTOSTART = TRUE
    {
      ALARMTIME = 1;
      CYCLETIME = 100;  /* LightSensorTask is executed every 100 */
      APPMODE = appmode1;
    };
  };
  
  /* Definition of LeftSensorTask execution timing */
  ALARM cyclic_alarm4
  {
    COUNTER = SysTimerCnt;
    ACTION = ACTIVATETASK
    {
      TASK = LeftSensorTask;
    };
    AUTOSTART = TRUE
    {
      ALARMTIME = 1;
      CYCLETIME = 50;  /* LeftSensorTask is executed every 30ms */
      APPMODE = appmode1;
    };
  };
    
	  /* Definition of RightSensorTask execution timing */
  ALARM cyclic_alarm5
  {
    COUNTER = SysTimerCnt;
    ACTION = ACTIVATETASK
    {
      TASK = RightSensorTask;
    };
    AUTOSTART = TRUE
    {
      ALARMTIME = 1;
      CYCLETIME = 50;  /* RightSensorTask is executed every 30msec */
      APPMODE = appmode1;
    };
  };
  
  	  /* Definition of FrontSensorTask execution timing */
  ALARM cyclic_alarm6
  {
    COUNTER = SysTimerCnt;
    ACTION = ACTIVATETASK
    {
      TASK = FrontSensorTask;
    };
    AUTOSTART = TRUE
    {
      ALARMTIME = 1;
      CYCLETIME = 50;  /* FrontSensorTask is executed every 30msec */
      APPMODE = appmode1;
    };
  };
  
  RESOURCE sensor_data_manage
  {
 	RESOURCEPROPERTY = STANDARD;
  };
};

